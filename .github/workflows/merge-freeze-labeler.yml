name: Merge Freeze Labeler

permissions:
  pull-requests: write
  issues: write

on:
  pull_request:
    types: [opened, closed, reopened, synchronize]

jobs:
  update-merge-freeze-label:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Manage merge-freeze label for current PR if base is main (add/remove based on open release PRs)
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_BASE: ${{ github.event.pull_request.base.ref }}
          HEAD_BRANCH: ${{ github.event.pull_request.head.ref }}
        run: |
          # Only handle PRs with base branch as main and head branch not starting with release
          if [[ "$PR_BASE" == "main" && ! "$HEAD_BRANCH" =~ ^release ]]; then
            # Check if there are any open release/* PRs
            release_prs=$(gh pr list --state open --json headRefName --jq '.[] | select(.headRefName | startswith("release"))')
            if [[ -n "$release_prs" ]]; then
              # If there are open release PRs, add merge-freeze label
              gh pr edit "$PR_NUMBER" --add-label merge-freeze || true
            else
              # If there are no open release PRs, remove merge-freeze label
              gh pr edit "$PR_NUMBER" --remove-label merge-freeze || true
            fi
          fi

      - name: Manage merge-freeze label on all open PRs (only for non-release head branch & base main, and only when current head is release/*)
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT_TOKEN }}
          HEAD_BRANCH: ${{ github.event.pull_request.head.ref }}
        run: |
          # 只在當前 head branch 是 release 開頭時才執行
          if [[ "$HEAD_BRANCH" == release* ]]; then
            # 取得所有 open PR 的 number、head branch、base branch
            prs=$(gh pr list --state open --json number,headRefName,baseRefName --jq '.[] | [.number, .headRefName, .baseRefName] | @tsv')

            # 判斷事件型態
            if [[ "${{ github.event.action }}" == "opened" || "${{ github.event.action }}" == "reopened" || "${{ github.event.action }}" == "synchronize" ]]; then
              # PR open/reopen/sync 時，加上 merge-freeze label（只對 head branch 不是 release 開頭且 base branch 是 main 的 PR）
              while IFS=$'\t' read -r pr_num pr_branch pr_base; do
                if [[ "$pr_branch" != release* && "$pr_base" == "main" ]]; then
                  gh pr edit "$pr_num" --add-label merge-freeze || true
                fi
              done <<< "$prs"
            elif [[ "${{ github.event.action }}" == "closed" ]]; then
              # PR close/merge 時，移除 merge-freeze label（只對 head branch 不是 release 開頭且 base branch 是 main 的 PR）
              while IFS=$'\t' read -r pr_num pr_branch pr_base; do
                if [[ "$pr_branch" != release* && "$pr_base" == "main" ]]; then
                  gh pr edit "$pr_num" --remove-label merge-freeze || true
                fi
              done <<< "$prs"
            fi
          else
            echo "Current head branch is not release*, skipping."
            exit 0
          fi
        # 註解：只有當前 head branch 是 release 開頭時才會執行，且只對 head branch 不是 release 開頭且 base branch 是 main 的 PR 加/移 label
